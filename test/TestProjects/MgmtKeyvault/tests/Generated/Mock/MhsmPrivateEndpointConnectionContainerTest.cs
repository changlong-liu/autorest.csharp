// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.TestFramework;
using MgmtKeyvault;
using NUnit.Framework;

namespace MgmtKeyvault.Tests.Mock
{
    /// <summary> Test for MhsmPrivateEndpointConnection. </summary>
    public partial class MhsmPrivateEndpointConnectionContainerMockTests : MockTestBase
    {
        public MhsmPrivateEndpointConnectionContainerMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
        }

        private async Task<MgmtKeyvault.MhsmPrivateEndpointConnectionContainer> GetMhsmPrivateEndpointConnectionContainerAsync(string resourceGroupName, string name)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            ManagedHsmContainer managedHsmContainer = resourceGroup.GetManagedHsms();
            ManagedHsm managedHsm = await TestHelper.CreateOrUpdateExampleInstanceAsync(managedHsmContainer, name);
            MhsmPrivateEndpointConnectionContainer mhsmPrivateEndpointConnectionContainer = managedHsm.GetMhsmPrivateEndpointConnections();
            return mhsmPrivateEndpointConnectionContainer;
        }

        private MgmtKeyvault.MhsmPrivateEndpointConnectionContainer GetMhsmPrivateEndpointConnectionContainer(string resourceGroupName, string name)
        {
            ResourceGroup resourceGroup = TestHelper.CreateResourceGroup(resourceGroupName, GetArmClient());
            ManagedHsmContainer managedHsmContainer = resourceGroup.GetManagedHsms();
            ManagedHsm managedHsm = TestHelper.CreateOrUpdateExampleInstance(managedHsmContainer, name);
            MhsmPrivateEndpointConnectionContainer mhsmPrivateEndpointConnectionContainer = managedHsm.GetMhsmPrivateEndpointConnections();
            return mhsmPrivateEndpointConnectionContainer;
        }
    }
}
